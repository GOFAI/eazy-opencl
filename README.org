* eazy-opencl - Opencl Binding for Common Lisp

Development status:

+ [X] basic CFFI binding, grovelling
+ [X] proper error handling
+ [X] integration to lisp GC
+ [X] Minimally Viable API
+ [X] extensive testing
+ [ ] lisp-to-C preprocessor
+ [ ] loading external OpenCL library easily (like in quicklisp)
+ [ ] really good way to handle complicated memory operation
  (e.g., generating operations automatically)

Perhaps, I should stop here, and leave these features to external libraries?

** Installation

You have to install OpenCL developmental library.
Other than that, just load it in the quicklisp local-project directory.
Run the tests by:

=(asdf:test-system :eazy-opencl)=

Be sure that the *intended* OpenCL shared library is loaded by lisp.
To find out which =libOpenCL.so= is loaded, use =lsof= on your
running lisp and see if the correct =libOpenCL.so= is present.

# For example, CFFI
# may load the old =libOpenCL.so= which was installed by =apt= and supports
# OpenCL1.2 only, not the latest one which comes with AMD developper SDK or
# similar.
# It is
# characteristic when you installed OpenCL-2.0-conformant library but CFFI
# complains with =Undefined alien: "clCreateCommandQueueWithProperties"= and
# similar messages.

** Devices

OpenCL supports wide variety of hardware including CPU. The official, comprehensive device
list is available [[https://www.khronos.org/conformance/adopters/conformant-products][here]].

+ CPU with SSE2.X instruction (AMD APPSDK), SSE4.2 instruction (Intel)
+ Intel Xeon Phi
+ ARM mobile CPUs (qualcomm snapdragon etc.)
+ CPU with embedded GPU (latest Intel, or AMD A-series)
+ FPGA, ASIC, DSP
+ GPGPU (Radeon, GeForce)

Note that AMD APPSDK can be installed on any CPUs supporting SSE2 (even on Intel).

# While NVIDIA used to be largely inactive in supporting OpenCL and like to
# maintain the vendor-lock-in with CUDA, as of 2015-05-07, there are [[https://www.khronos.org/conformance/adopters/conformant-products][large
# number of NVIDIA's products]] passing the opencl 1.2 conformance test.

** Supported OpenCL Versions

+ opencl-1.0, 1.1, 1.2, 2.0

This library is developped with AMD APPSDK v3.0 (OpenCL 2.0), Radeon HD 5770 and PhenomII X6.

OpenCL has a /specification/ independent from /implementations/, much like
in ANSI Common Lisp. It maintains the backward-compatibility (any programs
written with earlier versions of OpenCL should work.)

Bug/Trouble Reports should go to [[https://github.com/guicho271828/eazy-opencl/issues][github issues]] page.

In this library, I do not support ANY OpenGL / Direct3D- related apis since
I mostly targets scientific use. If you send me a pullreq I will merge it,
but for it to be accepted, it should come with a minimal test code.

** Author

Masataro Asai (guicho2.71828@gmail.com)

C source generator will be forked from [[https://github.com/takagi/cl-cuda][Takagi@CL-CUDA]] if ever implemented.

CFFI-binding is forked from cl-opencl-3b, but largely extended to support OpenCL 2.0.

** Motivation

Both [[https://github.com/malkia/cl-opencl][cl-opencl]] and [[https://github.com/3b/cl-opencl-3b][cl-opencl-3b]] look abandoned, so I'm trying to supersede
it. In fact, no one seems using it, nor it is on Quicklisp.

Implementing Deep NN in lisp is one ambitious goal. However it is not
really necessary, since external DL-NN OpenCL libraries are available.
See https://github.com/hughperkins/DeepCL.

* License

Licensed under the LLGPL License.

